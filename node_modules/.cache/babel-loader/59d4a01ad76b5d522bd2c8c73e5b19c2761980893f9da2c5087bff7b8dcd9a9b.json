{"ast":null,"code":"var _jsxFileName = \"/Users/adnan/Desktop/THE JUMP/FT4/simpsons-lifting-state/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [simpsons, setSimpsons] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"az\");\n  const getApiData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`https://thesimpsonsquoteapi.glitch.me/quotes?count=25`);\n      data.forEach(el => {\n        el.id = Math.round(Math.random() * 100000000);\n        el.liked = false;\n      });\n      setSimpsons(data);\n      console.log(data);\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  };\n  useEffect(() => {\n    getApiData();\n  }, []);\n  onInput = e => {\n    console.log(e.target.value);\n    setSearch(e.target.value);\n  };\n\n  // total liked\n  let total = 0;\n  simpsons.forEach(el => {\n    if (el.liked) {\n      total++;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simpsons random quote generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Liked: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        id: \"search\",\n        onInput: onInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sort\",\n          children: \"Sort by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"sort\",\n          id: \"sort\",\n          onChange: onSortSelection,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"az\",\n            children: \"A to Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"za\",\n            children: \"Z to A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), filteredSimpsons.map(character => {\n      return /*#__PURE__*/_jsxDEV(Character, {\n        onLikeClick: onLikeClick,\n        character: character,\n        onDeleteClick: onDeleteClick\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"//BxV9J1T91JOhpJFTbvtzJN5Gs=\");\n_c = App;\nexport default App;\n\n// class App extends Component {\n//   state = { search: \"\" };\n\n//   async componentDidMount() {\n//\n//   }\n\n//   onLikeClick = (id) => {\n//     console.log(\"like clicked\", id);\n//     // copying\n//     const simpsons = [...this.state.simpsons];\n//     // finding index\n//     const characterIndex = simpsons.findIndex(\n//       (character) => character.id === id\n//     );\n//     // toggle liked\n//     simpsons[characterIndex].liked = !simpsons[characterIndex].liked;\n//     // save state\n//     this.setState({ simpsons });\n//   };\n\n//   onDeleteClick = (id) => {\n//     const simpsons = [...this.state.simpsons];\n//     const characterIndex = simpsons.findIndex(\n//       (character) => character.id === id\n//     );\n//     simpsons.splice(characterIndex, 1);\n//     this.setState({ simpsons });\n//   };\n\n//   onSortSelection = (e) => {\n//     console.log(e.target.value);\n//     this.setState({ sort: e.target.value });\n//   };\n\n//   render() {\n//     console.log(this.state);\n//     const { simpsons, sort } = this.state;\n\n//     if (!simpsons) {\n//       return (\n//         <div className=\"container\">\n//           <Spinner />\n//         </div>\n//       );\n//     }\n\n//     const filteredSimpsons = simpsons.filter((item) => {\n//       return item.character\n//         .toLowerCase()\n//         .includes(this.state.search.toLowerCase());\n//     });\n\n//     // sort by function\n//     if (this.state.sort === \"az\") {\n//       filteredSimpsons.sort((item1, item2) => {\n//         if (item1.character > item2.character) {\n//           return 1;\n//         }\n//         if (item1.character < item2.character) {\n//           return -1;\n//         }\n//         return 0;\n//       });\n//     }\n//     if (this.state.sort === \"za\") {\n//       filteredSimpsons.sort((item1, item2) => {\n//         if (item1.character > item2.character) {\n//           return -1;\n//         }\n//         if (item1.character < item2.character) {\n//           return 1;\n//         }\n//         return 0;\n//       });\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <h1>Simpsons random quote generator</h1>\n//         <h3>Total Liked: {total}</h3>\n//         <div className=\"searchBar\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"search\"\n//             id=\"search\"\n//             onInput={this.onInput}\n//           ></input>\n//           <div className=\"controls\">\n//             <label htmlFor=\"sort\">Sort by</label>\n//             <select name=\"sort\" id=\"sort\" onChange={this.onSortSelection}>\n//               <option value=\"az\">A to Z</option>\n//               <option value=\"za\">Z to A</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         {filteredSimpsons.map((character) => {\n//           return (\n//             <Character\n//               key={character.id}\n//               onLikeClick={this.onLikeClick}\n//               character={character}\n//               onDeleteClick={this.onDeleteClick}\n//             />\n//           );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Character","Spinner","jsxDEV","_jsxDEV","App","_s","simpsons","setSimpsons","search","setSearch","sort","setSort","getApiData","data","get","forEach","el","id","Math","round","random","liked","console","log","e","onInput","target","value","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","htmlFor","name","onChange","onSortSelection","filteredSimpsons","map","character","onLikeClick","onDeleteClick","_c","$RefreshReg$"],"sources":["/Users/adnan/Desktop/THE JUMP/FT4/simpsons-lifting-state/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [simpsons, setSimpsons] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"az\");\n  const getApiData = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://thesimpsonsquoteapi.glitch.me/quotes?count=25`\n      );\n\n      data.forEach((el) => {\n        el.id = Math.round(Math.random() * 100000000);\n        el.liked = false;\n      });\n\n      setSimpsons(data);\n      console.log(data);\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  };\n  useEffect(() => {\n    getApiData();\n  }, []);\n\n  onInput = (e) => {\n    console.log(e.target.value);\n    setSearch(e.target.value);\n  };\n\n  // total liked\n  let total = 0;\n  simpsons.forEach((el) => {\n    if (el.liked) {\n      total++;\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <h1>Simpsons random quote generator</h1>\n      <h3>Total Liked: {total}</h3>\n      <div className=\"searchBar\">\n        <input\n          type=\"text\"\n          placeholder=\"search\"\n          id=\"search\"\n          onInput={onInput}\n        ></input>\n        <div className=\"controls\">\n          <label htmlFor=\"sort\">Sort by</label>\n          <select name=\"sort\" id=\"sort\" onChange={onSortSelection}>\n            <option value=\"az\">A to Z</option>\n            <option value=\"za\">Z to A</option>\n          </select>\n        </div>\n      </div>\n\n      {filteredSimpsons.map((character) => {\n        return (\n          <Character\n            key={character.id}\n            onLikeClick={onLikeClick}\n            character={character}\n            onDeleteClick={onDeleteClick}\n          />\n        );\n      })}\n    </div>\n  );\n};\nexport default App;\n\n// class App extends Component {\n//   state = { search: \"\" };\n\n//   async componentDidMount() {\n//\n//   }\n\n//   onLikeClick = (id) => {\n//     console.log(\"like clicked\", id);\n//     // copying\n//     const simpsons = [...this.state.simpsons];\n//     // finding index\n//     const characterIndex = simpsons.findIndex(\n//       (character) => character.id === id\n//     );\n//     // toggle liked\n//     simpsons[characterIndex].liked = !simpsons[characterIndex].liked;\n//     // save state\n//     this.setState({ simpsons });\n//   };\n\n//   onDeleteClick = (id) => {\n//     const simpsons = [...this.state.simpsons];\n//     const characterIndex = simpsons.findIndex(\n//       (character) => character.id === id\n//     );\n//     simpsons.splice(characterIndex, 1);\n//     this.setState({ simpsons });\n//   };\n\n//   onSortSelection = (e) => {\n//     console.log(e.target.value);\n//     this.setState({ sort: e.target.value });\n//   };\n\n//   render() {\n//     console.log(this.state);\n//     const { simpsons, sort } = this.state;\n\n//     if (!simpsons) {\n//       return (\n//         <div className=\"container\">\n//           <Spinner />\n//         </div>\n//       );\n//     }\n\n//     const filteredSimpsons = simpsons.filter((item) => {\n//       return item.character\n//         .toLowerCase()\n//         .includes(this.state.search.toLowerCase());\n//     });\n\n//     // sort by function\n//     if (this.state.sort === \"az\") {\n//       filteredSimpsons.sort((item1, item2) => {\n//         if (item1.character > item2.character) {\n//           return 1;\n//         }\n//         if (item1.character < item2.character) {\n//           return -1;\n//         }\n//         return 0;\n//       });\n//     }\n//     if (this.state.sort === \"za\") {\n//       filteredSimpsons.sort((item1, item2) => {\n//         if (item1.character > item2.character) {\n//           return -1;\n//         }\n//         if (item1.character < item2.character) {\n//           return 1;\n//         }\n//         return 0;\n//       });\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <h1>Simpsons random quote generator</h1>\n//         <h3>Total Liked: {total}</h3>\n//         <div className=\"searchBar\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"search\"\n//             id=\"search\"\n//             onInput={this.onInput}\n//           ></input>\n//           <div className=\"controls\">\n//             <label htmlFor=\"sort\">Sort by</label>\n//             <select name=\"sort\" id=\"sort\" onChange={this.onSortSelection}>\n//               <option value=\"az\">A to Z</option>\n//               <option value=\"za\">Z to A</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         {filteredSimpsons.map((character) => {\n//           return (\n//             <Character\n//               key={character.id}\n//               onLikeClick={this.onLikeClick}\n//               character={character}\n//               onDeleteClick={this.onDeleteClick}\n//             />\n//           );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}